#!/usr/bin/with-contenv bash
# Demyx
# https://demyx.sh

if [[ ! -f /var/www/html/.env ]]; then
	echo "[demyx] installing WordPress..."
	tar -xzf /usr/src/bedrock.tgz -C /var/www/html
	chown -R www-data:www-data /var/www/html

	if [[ -n "$WORDPRESS_DB_NAME" ]] && [[ -n "$WORDPRESS_DB_USER" ]] && [[ -n "$WORDPRESS_DB_PASSWORD" ]] && [[ -n "$WORDPRESS_DB_HOST" ]] && [[ -n "$WORDPRESS_DOMAIN" ]]; then
		WORDPRESS_PROTO="http://$WORDPRESS_DOMAIN"
		[[ "$WORDPRESS_SSL" = true ]] && WORDPRESS_PROTO="https://$WORDPRESS_DOMAIN"
		sed -i "s|WP_HOME=.*|WP_HOME=$WORDPRESS_PROTO|g" /var/www/html/.env
		sed -i "s|database_name|$WORDPRESS_DB_NAME|g" /var/www/html/.env
		sed -i "s|database_user|$WORDPRESS_DB_USER|g" /var/www/html/.env
		sed -i "s|database_password|$WORDPRESS_DB_PASSWORD|g" /var/www/html/.env
		sed -i "s|# DB_HOST=localhost|DB_HOST=$WORDPRESS_DB_HOST|g" /var/www/html/.env
		SALT="$(curl -sL https://api.wordpress.org/secret-key/1.1/salt/ | sed "s|define('||g" | sed "s|',|=|g" | sed "s| ||g" | sed "s|);||g")"
		printf '%s\n' "g/generateme/d" a "$SALT" . w | ed -s /var/www/html/.env
	else
		echo "One or more environment variables are missing!"
		exit 1
	fi
fi

# Set permissions and ownership
find /var/www/html -type d -print0 | xargs -0 chmod 0755
find /var/www/html -type f ! -executable -print0 | xargs -0 chmod 0644
chown -R www-data:www-data /var/www/html

# Bedrock mode
if [[ -z "$DEMYX_APP_BEDROCK_MODE" ]]; then
	sed -i "s|WP_ENV=.*|WP_ENV=production|g" /var/www/html/.env
else
	sed -i "s|WP_ENV=.*|WP_ENV=$DEMYX_APP_BEDROCK_MODE|g" /var/www/html/.env
fi

# Domain replacement
if [[ -n "$WORDPRESS_DOMAIN" ]]; then
	sed -i "s|/var/log/demyx/demyx|/var/log/demyx/$WORDPRESS_DOMAIN|g" /etc/nginx/nginx.conf
	sed -i "s|/var/log/demyx/demyx|/var/log/demyx/$WORDPRESS_DOMAIN|g" /etc/php7/php-fpm.d/www.conf
fi

# Cloudflare check
WORDPRESS_CLOUDFLARE_CHECK="$(curl -m 1 -svo /dev/null "$WORDPRESS_DOMAIN" 2>&1 | grep "Server: cloudflare" || true)"
if [[ -n "$WORDPRESS_CLOUDFLARE_CHECK" ]]; then
	sed -i "s|#CF|real_ip_header CF-Connecting-IP; set_real_ip_from 0.0.0.0/0;|g" /etc/nginx/nginx.conf
else
	sed -i "s|#CF|real_ip_header X-Forwarded-For; set_real_ip_from 0.0.0.0/0;|g" /etc/nginx/nginx.conf
fi

# PHP/NGINX Upload limit
if [[ -n "$WORDPRESS_UPLOAD_LIMIT" ]]; then
	sed -i "s|client_max_body_size 128M|client_max_body_size $WORDPRESS_UPLOAD_LIMIT|g" /etc/nginx/nginx.conf
	sed -i "s|post_max_size = 128M|post_max_size = $WORDPRESS_UPLOAD_LIMIT|g" /etc/php7/php.ini
	sed -i "s|upload_max_filesize = 128M|upload_max_filesize = $WORDPRESS_UPLOAD_LIMIT|g" /etc/php7/php.ini
fi

# PHP max memory limit
if [[ -n "$WORDPRESS_PHP_MEMORY" ]]; then
	sed -i "s|memory_limit = 256M|memory_limit = $WORDPRESS_PHP_MEMORY|g" /etc/php7/php.ini
fi

# PHP max execution time
if [[ -n "$WORDPRESS_PHP_MAX_EXECUTION_TIME" ]]; then
	sed -i "s|max_execution_time = 300|max_execution_time = $WORDPRESS_PHP_MAX_EXECUTION_TIME|g" /etc/php7/php.ini
fi

# PHP opcache
if [[ "$WORDPRESS_PHP_OPCACHE" = off ]] || [[ "$WORDPRESS_PHP_OPCACHE" = false ]]; then
	sed -i "s|opcache.enable=1|opcache.enable=0|g" /etc/php7/php.ini
	sed -i "s|opcache.enable_cli=1|opcache.enable_cli=0|g" /etc/php7/php.ini
fi

# NGINX FastCGI cache
if [[ "$WORDPRESS_NGINX_CACHE" = on ]] || [[ "$WORDPRESS_NGINX_CACHE" = true ]]; then
	sed -i "s|#include /etc/nginx/cache|include /etc/nginx/cache|g" /etc/nginx/nginx.conf
fi

# NGINX rate limiting
if [[ "$WORDPRESS_NGINX_RATE_LIMIT" = on ]] || [[ "$WORDPRESS_NGINX_RATE_LIMIT" = true ]]; then
	sed -i "s|#limit_req|limit_req|g" /etc/nginx/nginx.conf
fi

# NGINX xmlrpc.php
if [[ "$WORDPRESS_NGINX_XMLRPC" = on ]] || [[ "$WORDPRESS_NGINX_XMLRPC" = true ]]; then
	mv /etc/nginx/common/xmlrpc.conf /etc/nginx/common/xmlrpc.on
fi

# NGINX Basic auth
if [[ "$WORDPRESS_NGINX_BASIC_AUTH" = on ]] || [[ "$WORDPRESS_NGINX_BASIC_AUTH" = true ]]; then
	echo "$WORDPRESS_NGINX_BASIC_AUTH" > /.htpasswd
	sed -i "s|#auth_basic|auth_basic|g" /etc/nginx/nginx.conf
fi

# Timezone
if [[ "$TZ" ]]; then
	sed -i "s|UTC|$TZ|g" /etc/php7/php.ini
fi
